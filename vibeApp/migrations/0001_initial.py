# Generated by Django 5.1.3 on 2024-12-02 16:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='achievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_achievement', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('minimal_durations', models.TimeField()),
                ('make_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'achievements',
            },
        ),
        migrations.CreateModel(
            name='group_streaks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_group', models.CharField(blank=True, max_length=100, null=True)),
                ('target_duration_groupstreaks', models.TimeField()),
                ('make_date_groupstreaks', models.DateTimeField(auto_now_add=True)),
                ('active_status_groupstreaks', models.BooleanField()),
            ],
            options={
                'db_table': 'group_streaks',
            },
        ),
        migrations.CreateModel(
            name='post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captions', models.TextField()),
                ('media', models.URLField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='postingan_tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('ID_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.post')),
            ],
            options={
                'db_table': 'postingan_tags',
            },
        ),
        migrations.CreateModel(
            name='streak_invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_invitation', models.DateTimeField(auto_now_add=True)),
                ('status_invitation', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], max_length=10)),
                ('ID_group_streak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.group_streaks')),
                ('ID_user_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_received', to='vibeApp.user')),
                ('ID_user_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_sent', to='vibeApp.user')),
            ],
            options={
                'db_table': 'streak_invitation',
            },
        ),
        migrations.CreateModel(
            name='stopwatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('finish_time', models.DateTimeField()),
                ('duration_stopwatch', models.TimeField()),
                ('ID_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'stopwatch',
            },
        ),
        migrations.CreateModel(
            name='status_streaks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_join_streaks', models.DateField()),
                ('status', models.BooleanField()),
                ('duration', models.TimeField()),
                ('ID_group_streaks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.group_streaks')),
                ('ID_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'status_streaks',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='ID_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user'),
        ),
        migrations.CreateModel(
            name='likes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.post')),
                ('ID_likedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'likes',
            },
        ),
        migrations.CreateModel(
            name='follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow_date', models.DateField(auto_now_add=True)),
                ('ID_user_followed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='vibeApp.user')),
                ('ID_user_follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='vibeApp.user')),
            ],
            options={
                'db_table': 'follow',
            },
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_comment', models.TextField()),
                ('ID_comment_rep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vibeApp.comment')),
                ('ID_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.post')),
                ('ID_commentBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='user_achievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_date', models.DateTimeField()),
                ('streaks_status', models.BooleanField()),
                ('total_durations', models.TimeField()),
                ('ID_achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.achievements')),
                ('ID_stopwatch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.stopwatch')),
                ('ID_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'user_achievements',
            },
        ),
        migrations.CreateModel(
            name='user_group_streaks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_status', models.BooleanField()),
                ('join_date_user_groupstreaks', models.DateTimeField()),
                ('ID_group_streaks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.group_streaks')),
                ('ID_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'user_group_streaks',
            },
        ),
        migrations.CreateModel(
            name='user_streaks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('finish_date', models.DateField()),
                ('total', models.TimeField()),
                ('active_status', models.BooleanField()),
                ('ID_group_streaks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.group_streaks')),
                ('ID_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vibeApp.user')),
            ],
            options={
                'db_table': 'user_streaks',
            },
        ),
    ]
